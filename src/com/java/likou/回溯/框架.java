package com.java.likou.回溯;

public class 框架 {


    /**
     * 解决一个回溯问题，实际上就是一个决策树的遍历过程。你只需要思考 3 个问题：
     *
     * 1、路径：也就是已经做出的选择。
     *
     * 2、选择列表：也就是你当前可以做的选择。
     *
     * 3、结束条件：也就是到达决策树底层，无法再做选择的条件。
     *
     * 其核心就是 for 循环里面的递归，在递归调用之前「做选择」，在递归调用之后「撤销选择」，特别简单。
     */

//    result = []
//    def backtrack(路径, 选择列表):
//        if 满足结束条件:
//        result.add(路径)
//        return
//
//        for 选择 in 选择列表:
//            做选择
//            backtrack(路径, 选择列表)
//            撤销选择



//    for 选择 in 选择列表:
//        # 做选择
//        将该选择从选择列表移除
//        路径.add(选择)
//        backtrack(路径, 选择列表)
//        # 撤销选择
//        路径.remove(选择)
//        将该选择再加入选择列表
}
